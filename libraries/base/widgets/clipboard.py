"""Data Frame SQL
.. helpdoc::
This widget performs various SQL syntax manipulations of dataframes.  Primarily, the purpose is to allow the user to generate SQL queries and enter them into the query box, thereby generating new data frames that can be sent into the schema.  

The widget does this by simply sending any data frame that is generated by executing the specified query.  There are tools to help the user select different attributes of the columns, ie SELECT average(a) average(b) ... average(n) FROM data
"""

"""
<widgetXML>    
    <name>Clipboard<!-- [REQUIRED] title --></name>
    <icon>clipboard.png</icon>
    <tags>
        <tag>View Data</tag>
    </tags>
    <summary>Writes tables to the clipboard. <!-- [REQUIRED] A Brief description of the widget and what it does--></summary>
    <author>
        <authorname>Red-R Core Development Team</authorname>
        <authorcontact>www.red-r.org</authorcontact>
    </author>
</widgetXML>
"""

"""
<name>Clipboard</name>
"""
from OWRpy import * 
import redRGUI, signals
import redR

class clipboard(OWRpy): 
    settingsList = []
    def __init__(self, **kwargs):
        OWRpy.__init__(self, **kwargs)
        self.RFunctionParam_data = ''
        
        """.. rrsignals::"""
        self.inputs.addInput("data", "Data Table", signals.base.RDataFrame, self.processdata)
        
        redRGUI.base.commitButton(self.bottomAreaRight, "Commit", callback = self.commitFunction)
    def processdata(self, data):
        if data:
            self.RFunctionParam_data=data.getData()
            self.commitFunction()
        else:
            self.RFunctionParam_data=''
    def commitFunction(self):
        if unicode(self.RFunctionParam_data) == '': 
            self.status.setText('No data to work with')
            return
        self.R('write.table(%s, "clipboard", sep = \'\\t\', col.names = NA)' % self.RFunctionParam_data, wantType = redR.NOCONVERSION)
        
        
    